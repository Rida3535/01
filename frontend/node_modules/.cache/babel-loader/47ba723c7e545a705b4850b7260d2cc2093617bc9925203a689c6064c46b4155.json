{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrc\\\\Documents\\\\SEM-VII\\\\IAD\\\\Assignment\\\\01\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\"; // Make sure logo.svg is in the src folder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000\"; // Backend URL\n\nfunction App() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await fetch(`${API_URL}/api/projects`);\n      const data = await response.json();\n      setProjects(data.projects);\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n    }\n  };\n  useEffect(() => {\n    fetch(`${API_URL}/api/projects/count`).then(res => res.json()).then(data => setCount(data.total)).catch(error => console.error(\"Error fetching count:\", error));\n  }, [projects]);\n  const addProject = async () => {\n    if (newProject.length < 3) {\n      setError(\"Project name must be at least 3 characters\");\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/api/projects`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newProject\n        })\n      });\n      const data = await response.json();\n      if (data.status === \"error\") {\n        setError(data.message);\n      } else {\n        setProjects([...projects, data.project]);\n        setNewProject(\"\");\n        setError(\"\");\n      }\n    } catch (error) {\n      console.error(\"Failed to add project:\", error);\n    }\n  };\n  const deleteProject = async id => {\n    try {\n      const response = await fetch(`${API_URL}/api/projects/${id}`, {\n        method: \"DELETE\"\n      });\n      const data = await response.json();\n      if (data.status === \"success\") {\n        setProjects(projects.filter(proj => proj.id !== id));\n      }\n    } catch (error) {\n      console.error(\"Failed to delete project:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDE80 Project Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Projects: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"count\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter project name...\",\n          value: newProject,\n          onChange: e => setNewProject(e.target.value),\n          className: \"project-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addProject,\n          className: \"add-btn\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-list\",\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteProject(project.id),\n            className: \"delete-btn\",\n            children: \"\\uD83D\\uDDD1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"De2CLB84hNDHSCRYg8/PjQkIoN0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","jsxDEV","_jsxDEV","API_URL","App","_s","projects","setProjects","newProject","setNewProject","error","setError","count","setCount","fetchProjects","response","fetch","data","json","console","then","res","total","catch","addProject","length","method","headers","body","JSON","stringify","name","status","message","project","deleteProject","id","filter","proj","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/mrc/Documents/SEM-VII/IAD/Assignment/01/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\"; // Make sure logo.svg is in the src folder\n\nconst API_URL = \"http://localhost:5000\"; // Backend URL\n\nfunction App() {\n    const [projects, setProjects] = useState([]);\n    const [newProject, setNewProject] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        fetchProjects();\n    }, []);\n\n    const fetchProjects = async () => {\n        try {\n            const response = await fetch(`${API_URL}/api/projects`);\n            const data = await response.json();\n            setProjects(data.projects);\n        } catch (error) {\n            console.error(\"Error fetching projects:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetch(`${API_URL}/api/projects/count`)\n            .then((res) => res.json())\n            .then((data) => setCount(data.total))\n            .catch((error) => console.error(\"Error fetching count:\", error));\n    }, [projects]);\n\n    const addProject = async () => {\n        if (newProject.length < 3) {\n            setError(\"Project name must be at least 3 characters\");\n            return;\n        }\n\n        try {\n            const response = await fetch(`${API_URL}/api/projects`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ name: newProject }),\n            });\n\n            const data = await response.json();\n\n            if (data.status === \"error\") {\n                setError(data.message);\n            } else {\n                setProjects([...projects, data.project]);\n                setNewProject(\"\");\n                setError(\"\");\n            }\n        } catch (error) {\n            console.error(\"Failed to add project:\", error);\n        }\n    };\n\n    const deleteProject = async (id) => {\n        try {\n            const response = await fetch(`${API_URL}/api/projects/${id}`, {\n                method: \"DELETE\",\n            });\n\n            const data = await response.json();\n            if (data.status === \"success\") {\n                setProjects(projects.filter((proj) => proj.id !== id));\n            }\n        } catch (error) {\n            console.error(\"Failed to delete project:\", error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <h1>ðŸš€ Project Manager</h1>\n                <h2>Total Projects: <span className=\"count\">{count}</span></h2>\n\n                <div className=\"input-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter project name...\"\n                        value={newProject}\n                        onChange={(e) => setNewProject(e.target.value)}\n                        className=\"project-input\"\n                    />\n                    <button onClick={addProject} className=\"add-btn\">Add</button>\n                </div>\n\n                {error && <p className=\"error\">{error}</p>}\n\n                <div className=\"project-list\">\n                    {projects.map((project) => (\n                        <div key={project.id} className=\"project-card\">\n                            <span>{project.name}</span>\n                            <button onClick={() => deleteProject(project.id)} className=\"delete-btn\">ðŸ—‘</button>\n                        </div>\n                    ))}\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}