{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrc\\\\Documents\\\\SEM-VII\\\\IAD\\\\Assignment\\\\Project Management\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000\"; // Backend URL\n\nfunction App() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [refreshMessage, setRefreshMessage] = useState(false); // Added missing state\n\n  // Fetch projects from backend\n  const fetchProjects = async () => {\n    try {\n      const response = await fetch(`${API_URL}/api/projects`);\n      const data = await response.json();\n      if (!Array.isArray(data.projects)) {\n        console.error(\"Invalid response format:\", data);\n        setProjects([]);\n        return;\n      }\n      setProjects(data.projects);\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const addProject = async () => {\n    if (newProject.trim().length < 3) {\n      setError(\"Project name must be at least 3 characters\");\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/api/projects`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newProject.trim()\n        })\n      });\n      const data = await response.json();\n      console.log(\"Server Response:\", data); // ✅ Debugging log\n\n      if (response.ok) {\n        // ✅ Check if request was successful\n        setNewProject(\"\");\n        setError(\"\");\n        fetchProjects(); // Fetch updated projects\n      } else {\n        setError(data.message || \"Failed to add project\");\n      }\n    } catch (error) {\n      console.error(\"Failed to add project:\", error);\n      setError(\"Could not connect to the server\");\n    }\n  };\n  const deleteProject = async id => {\n    try {\n      const response = await fetch(`${API_URL}/api/projects/${id}`, {\n        method: \"DELETE\"\n      });\n      const data = await response.json();\n      if (data.status === \"success\") {\n        setProjects(projects.filter(proj => proj.id !== id));\n      }\n    } catch (error) {\n      console.error(\"Failed to delete project:\", error);\n    }\n  };\n  const refreshProjects = async () => {\n    await fetchProjects();\n    setError(\"\");\n    setNewProject(\"\");\n    setRefreshMessage(true); // Show refresh message\n\n    // Hide the message after 3 seconds\n    setTimeout(() => {\n      setRefreshMessage(false);\n    }, 3000);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      addProject();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon\",\n          children: \"\\u2699\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), \" Project Manager\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Projects: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"count\",\n          children: projects.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter project name...\",\n          value: newProject,\n          onChange: e => setNewProject(e.target.value),\n          onKeyDown: handleKeyPress // Pressing Enter adds project\n          ,\n          className: \"project-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addProject,\n          className: \"add-btn\",\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refreshProjects,\n          className: \"refresh-btn\",\n          children: \"Refresh Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 27\n      }, this), refreshMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"refresh-message\",\n        children: \"Projects list refreshed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 36\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-list\",\n        children: projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No projects found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this) : projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteProject(project.id),\n            className: \"delete-btn\",\n            children: \"\\uD83D\\uDDD1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"IncgtFFNUqkdHCj0vrE0joSAXNc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","App","_s","projects","setProjects","newProject","setNewProject","error","setError","refreshMessage","setRefreshMessage","fetchProjects","response","fetch","data","json","Array","isArray","console","addProject","trim","length","method","headers","body","JSON","stringify","name","log","ok","message","deleteProject","id","status","filter","proj","refreshProjects","setTimeout","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onKeyDown","onClick","map","project","_c","$RefreshReg$"],"sources":["C:/Users/mrc/Documents/SEM-VII/IAD/Assignment/Project Management/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nconst API_URL = \"http://localhost:5000\"; // Backend URL\n\nfunction App() {\n    const [projects, setProjects] = useState([]);\n    const [newProject, setNewProject] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [refreshMessage, setRefreshMessage] = useState(false); // Added missing state\n\n    // Fetch projects from backend\n    const fetchProjects = async () => {\n        try {\n            const response = await fetch(`${API_URL}/api/projects`);\n            const data = await response.json();\n\n            if (!Array.isArray(data.projects)) {\n                console.error(\"Invalid response format:\", data);\n                setProjects([]);\n                return;\n            }\n\n            setProjects(data.projects);\n        } catch (error) {\n            console.error(\"Error fetching projects:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchProjects();\n    }, []);\n\n    const addProject = async () => {\n        if (newProject.trim().length < 3) {\n            setError(\"Project name must be at least 3 characters\");\n            return;\n        }\n    \n        try {\n            const response = await fetch(`${API_URL}/api/projects`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ name: newProject.trim() }),\n            });\n    \n            const data = await response.json();\n            console.log(\"Server Response:\", data);  // ✅ Debugging log\n    \n            if (response.ok) {  // ✅ Check if request was successful\n                setNewProject(\"\");  \n                setError(\"\");  \n                fetchProjects();  // Fetch updated projects\n            } else {\n                setError(data.message || \"Failed to add project\");\n            }\n        } catch (error) {\n            console.error(\"Failed to add project:\", error);\n            setError(\"Could not connect to the server\");\n        }\n    };\n    \n\n    const deleteProject = async (id) => {\n        try {\n            const response = await fetch(`${API_URL}/api/projects/${id}`, {\n                method: \"DELETE\",\n            });\n\n            const data = await response.json();\n            if (data.status === \"success\") {\n                setProjects(projects.filter((proj) => proj.id !== id));\n            }\n        } catch (error) {\n            console.error(\"Failed to delete project:\", error);\n        }\n    };\n\n    const refreshProjects = async () => {\n        await fetchProjects();\n        setError(\"\");           setNewProject(\"\");   \n        setRefreshMessage(true); // Show refresh message\n\n        // Hide the message after 3 seconds\n        setTimeout(() => {\n            setRefreshMessage(false);\n        }, 3000);\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            addProject();\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>\n                    <span className=\"icon\">⚙️</span> Project Manager\n                </h1>\n\n                <h2>Total Projects: <span className=\"count\">{projects.length}</span></h2>\n\n                {/* Input text box */}\n                <div className=\"input-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter project name...\"\n                        value={newProject}\n                        onChange={(e) => setNewProject(e.target.value)}\n                        onKeyDown={handleKeyPress} // Pressing Enter adds project\n                        className=\"project-input\"\n                    />\n                </div>\n\n                {/* Buttons (Add Project & Refresh Projects) */}\n                <div className=\"button-container\">\n                    <button onClick={addProject} className=\"add-btn\">Add Project</button> \n                    <button onClick={refreshProjects} className=\"refresh-btn\">Refresh Projects</button>\n                </div>\n\n                {error && <p className=\"error\">{error}</p>}\n                {refreshMessage && <p className=\"refresh-message\">Projects list refreshed</p>} {/* Added success message */}\n\n                <div className=\"project-list\">\n                    {projects.length === 0 ? (\n                        <p>No projects found.</p>\n                    ) : (\n                        projects.map((project) => (\n                            <div key={project.id} className=\"project-card\">\n                                <span>{project.name}</span>\n                                <button onClick={() => deleteProject(project.id)} className=\"delete-btn\">🗑</button>\n                            </div>\n                        ))\n                    )}\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}