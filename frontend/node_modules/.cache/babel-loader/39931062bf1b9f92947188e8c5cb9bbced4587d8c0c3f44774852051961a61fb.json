{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrc\\\\Documents\\\\SEM-VII\\\\IAD\\\\Assignment\\\\01\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000\"; // Backend URL\n\nfunction App() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Fetch projects using an arrow function\n  const fetchProjects = async () => {\n    try {\n      const response = await fetch(`${API_URL}/api/projects`);\n      const data = await response.json();\n      if (!Array.isArray(data.projects)) {\n        console.error(\"Invalid response format:\", data);\n        setProjects([]);\n        return;\n      }\n      setProjects(data.projects);\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const addProject = async () => {\n    if (newProject.trim().length < 3) {\n      setError(\"Project name must be at least 3 characters\");\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/api/projects`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newProject.trim()\n        })\n      });\n      const data = await response.json();\n      console.log(\"Response from server:\", data); // ✅ Debugging log\n\n      if (data.status === \"error\") {\n        setError(data.message);\n      } else {\n        setNewProject(\"\");\n        setError(\"\");\n        await fetchProjects(); // ✅ Fetch updated projects from backend\n      }\n    } catch (error) {\n      console.error(\"Failed to add project:\", error);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      addProject();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon\",\n          children: \"\\u2699\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), \" Project Manager\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Projects: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"count\",\n          children: projects.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter project name...\",\n          value: newProject,\n          onChange: e => setNewProject(e.target.value),\n          onKeyDown: handleKeyPress // Pressing Enter adds project\n          ,\n          className: \"project-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addProject,\n          className: \"add-btn\",\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchProjects(),\n          className: \"refresh-btn\",\n          children: \"Refresh Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-list\",\n        children: projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No projects found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this) : projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteProject(project.id),\n            className: \"delete-btn\",\n            children: \"\\uD83D\\uDDD1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"3tC6bBQ9eFekV8BA2N75xmkMeUw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","App","_s","projects","setProjects","newProject","setNewProject","error","setError","fetchProjects","response","fetch","data","json","Array","isArray","console","addProject","trim","length","method","headers","body","JSON","stringify","name","log","status","message","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onKeyDown","onClick","map","project","deleteProject","id","_c","$RefreshReg$"],"sources":["C:/Users/mrc/Documents/SEM-VII/IAD/Assignment/01/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nconst API_URL = \"http://localhost:5000\"; // Backend URL\n\nfunction App() {\n    const [projects, setProjects] = useState([]);\n    const [newProject, setNewProject] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    // Fetch projects using an arrow function\n    const fetchProjects = async () => {\n        try {\n            const response = await fetch(`${API_URL}/api/projects`);\n            const data = await response.json();\n\n            if (!Array.isArray(data.projects)) {\n                console.error(\"Invalid response format:\", data);\n                setProjects([]);\n                return;\n            }\n\n            setProjects(data.projects);\n        } catch (error) {\n            console.error(\"Error fetching projects:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchProjects();\n    }, []);\n\n    const addProject = async () => {\n    if (newProject.trim().length < 3) {\n        setError(\"Project name must be at least 3 characters\");\n        return;\n    }\n\n    try {\n        const response = await fetch(`${API_URL}/api/projects`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ name: newProject.trim() }),\n        });\n\n        const data = await response.json();\n        console.log(\"Response from server:\", data);  // ✅ Debugging log\n\n        if (data.status === \"error\") {\n            setError(data.message);\n        } else {\n            setNewProject(\"\");  \n            setError(\"\");  \n            await fetchProjects();  // ✅ Fetch updated projects from backend\n        }\n    } catch (error) {\n        console.error(\"Failed to add project:\", error);\n    }\n};\n\n\n    const handleKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            addProject();\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>\n                    <span className=\"icon\">⚙️</span> Project Manager\n                </h1>\n\n                <h2>Total Projects: <span className=\"count\">{projects.length}</span></h2>\n\n                {/* Input text box */}\n                <div className=\"input-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter project name...\"\n                        value={newProject}\n                        onChange={(e) => setNewProject(e.target.value)}\n                        onKeyDown={handleKeyPress} // Pressing Enter adds project\n                        className=\"project-input\"\n                    />\n                </div>\n\n                {/* Buttons (Add Project & Refresh Projects) placed below input */}\n                <div className=\"button-container\">\n                    <button onClick={addProject} className=\"add-btn\">Add Project</button> \n                    <button onClick={() => fetchProjects()} className=\"refresh-btn\">Refresh Projects</button> {/* Arrow function */}\n                </div>\n\n                {error && <p className=\"error\">{error}</p>}\n\n                <div className=\"project-list\">\n                    {projects.length === 0 ? (\n                        <p>No projects found.</p>\n                    ) : (\n                        projects.map((project) => (\n                            <div key={project.id} className=\"project-card\">\n                                <span>{project.name}</span>\n                                <button onClick={() => deleteProject(project.id)} className=\"delete-btn\">🗑</button>\n                            </div>\n                        ))\n                    )}\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}