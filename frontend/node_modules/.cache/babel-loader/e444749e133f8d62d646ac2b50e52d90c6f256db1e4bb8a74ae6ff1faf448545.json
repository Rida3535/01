{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrc\\\\Documents\\\\SEM-VII\\\\IAD\\\\Assignment\\\\01\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000\"; // Backend URL\n\nfunction App() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [count, setCount] = useState(0);\n\n  // ðŸ”¹ Fetch all projects\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await fetch(`${API_URL}/api/projects`);\n      const data = await response.json();\n      setProjects(data.projects);\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n    }\n  };\n\n  // ðŸ”¹ Fetch total project count\n  useEffect(() => {\n    fetch(`${API_URL}/api/projects/count`).then(res => res.json()).then(data => setCount(data.total)).catch(error => console.error(\"Error fetching count:\", error));\n  }, [projects]);\n\n  // ðŸ”¹ Add a new project\n  const addProject = async () => {\n    if (newProject.length < 3) {\n      setError(\"Project name must be at least 3 characters\");\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/api/projects`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newProject\n        })\n      });\n      const data = await response.json();\n      if (data.status === \"error\") {\n        setError(data.message);\n      } else {\n        setProjects([...projects, data.project]);\n        setNewProject(\"\");\n        setError(\"\");\n      }\n    } catch (error) {\n      console.error(\"Failed to add project:\", error);\n    }\n  };\n\n  // ðŸ”¹ Delete a project\n  const deleteProject = async id => {\n    try {\n      const response = await fetch(`${API_URL}/api/projects/${id}`, {\n        method: \"DELETE\"\n      });\n      const data = await response.json();\n      if (data.status === \"success\") {\n        setProjects(projects.filter(proj => proj.id !== id));\n      }\n    } catch (error) {\n      console.error(\"Failed to delete project:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Project Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Projects: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter project name\",\n        value: newProject,\n        onChange: e => setNewProject(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addProject,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [project.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteProject(project.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"De2CLB84hNDHSCRYg8/PjQkIoN0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","App","_s","projects","setProjects","newProject","setNewProject","error","setError","count","setCount","fetchProjects","response","fetch","data","json","console","then","res","total","catch","addProject","length","method","headers","body","JSON","stringify","name","status","message","project","deleteProject","id","filter","proj","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","map","_c","$RefreshReg$"],"sources":["C:/Users/mrc/Documents/SEM-VII/IAD/Assignment/01/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from \"react\";\n\n\nconst API_URL = \"http://localhost:5000\"; // Backend URL\n\nfunction App() {\n    const [projects, setProjects] = useState([]);\n    const [newProject, setNewProject] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [count, setCount] = useState(0);\n\n    // ðŸ”¹ Fetch all projects\n    useEffect(() => {\n        fetchProjects();\n    }, []);\n\n    const fetchProjects = async () => {\n        try {\n            const response = await fetch(`${API_URL}/api/projects`);\n            const data = await response.json();\n            setProjects(data.projects);\n        } catch (error) {\n            console.error(\"Error fetching projects:\", error);\n        }\n    };\n\n    // ðŸ”¹ Fetch total project count\n    useEffect(() => {\n        fetch(`${API_URL}/api/projects/count`)\n            .then((res) => res.json())\n            .then((data) => setCount(data.total))\n            .catch((error) => console.error(\"Error fetching count:\", error));\n    }, [projects]);\n\n    // ðŸ”¹ Add a new project\n    const addProject = async () => {\n        if (newProject.length < 3) {\n            setError(\"Project name must be at least 3 characters\");\n            return;\n        }\n\n        try {\n            const response = await fetch(`${API_URL}/api/projects`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ name: newProject }),\n            });\n\n            const data = await response.json();\n\n            if (data.status === \"error\") {\n                setError(data.message);\n            } else {\n                setProjects([...projects, data.project]);\n                setNewProject(\"\");\n                setError(\"\");\n            }\n        } catch (error) {\n            console.error(\"Failed to add project:\", error);\n        }\n    };\n\n    // ðŸ”¹ Delete a project\n    const deleteProject = async (id) => {\n        try {\n            const response = await fetch(`${API_URL}/api/projects/${id}`, {\n                method: \"DELETE\",\n            });\n\n            const data = await response.json();\n            if (data.status === \"success\") {\n                setProjects(projects.filter((proj) => proj.id !== id));\n            }\n        } catch (error) {\n            console.error(\"Failed to delete project:\", error);\n        }\n    };\n\n    return (\n        <div className=\"App\"> {/* Add this class */}\n        <header className=\"App-header\"> {/* Apply App-header styles */}\n            <h1>Project Manager</h1>\n            <h2>Total Projects: {count}</h2>\n\n            {/* Add New Project Form */}\n            <input\n                type=\"text\"\n                placeholder=\"Enter project name\"\n                value={newProject}\n                onChange={(e) => setNewProject(e.target.value)}\n            />\n            <button onClick={addProject}>Add Project</button>\n\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n            {/* Project List */}\n            <ul>\n                {projects.map((project) => (\n                    <li key={project.id}>\n                        {project.name}\n                        <button onClick={() => deleteProject(project.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </header> {/* Closing App-header */}\n    </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACAC,SAAS,CAAC,MAAM;IACZc,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGb,OAAO,eAAe,CAAC;MACvD,MAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCX,WAAW,CAACU,IAAI,CAACX,QAAQ,CAAC;IAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZS,OAAO,CAACT,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACZgB,KAAK,CAAC,GAAGb,OAAO,qBAAqB,CAAC,CACjCiB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,CACzBE,IAAI,CAAEH,IAAI,IAAKJ,QAAQ,CAACI,IAAI,CAACK,KAAK,CAAC,CAAC,CACpCC,KAAK,CAAEb,KAAK,IAAKS,OAAO,CAACT,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAIhB,UAAU,CAACiB,MAAM,GAAG,CAAC,EAAE;MACvBd,QAAQ,CAAC,4CAA4C,CAAC;MACtD;IACJ;IAEA,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGb,OAAO,eAAe,EAAE;QACpDuB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEvB;QAAW,CAAC;MAC7C,CAAC,CAAC;MAEF,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACe,MAAM,KAAK,OAAO,EAAE;QACzBrB,QAAQ,CAACM,IAAI,CAACgB,OAAO,CAAC;MAC1B,CAAC,MAAM;QACH1B,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEW,IAAI,CAACiB,OAAO,CAAC,CAAC;QACxCzB,aAAa,CAAC,EAAE,CAAC;QACjBE,QAAQ,CAAC,EAAE,CAAC;MAChB;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZS,OAAO,CAACT,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;;EAED;EACA,MAAMyB,aAAa,GAAG,MAAOC,EAAE,IAAK;IAChC,IAAI;MACA,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGb,OAAO,iBAAiBiC,EAAE,EAAE,EAAE;QAC1DV,MAAM,EAAE;MACZ,CAAC,CAAC;MAEF,MAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACe,MAAM,KAAK,SAAS,EAAE;QAC3BzB,WAAW,CAACD,QAAQ,CAAC+B,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;MAC1D;IACJ,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACZS,OAAO,CAACT,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKqC,SAAS,EAAC,KAAK;IAAAC,QAAA,GAAC,GAAC,eACtBtC,OAAA;MAAQqC,SAAS,EAAC,YAAY;MAAAC,QAAA,GAAC,GAAC,eAC5BtC,OAAA;QAAAsC,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB1C,OAAA;QAAAsC,QAAA,GAAI,kBAAgB,EAAC5B,KAAK;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAGhC1C,OAAA;QACI2C,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAEvC,UAAW;QAClBwC,QAAQ,EAAGC,CAAC,IAAKxC,aAAa,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACF1C,OAAA;QAAQiD,OAAO,EAAE3B,UAAW;QAAAgB,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAEhDlC,KAAK,iBAAIR,OAAA;QAAGkD,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAb,QAAA,EAAE9B;MAAK;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAGjD1C,OAAA;QAAAsC,QAAA,EACKlC,QAAQ,CAACgD,GAAG,CAAEpB,OAAO,iBAClBhC,OAAA;UAAAsC,QAAA,GACKN,OAAO,CAACH,IAAI,eACb7B,OAAA;YAAQiD,OAAO,EAAEA,CAAA,KAAMhB,aAAa,CAACD,OAAO,CAACE,EAAE,CAAE;YAAAI,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAF5DV,OAAO,CAACE,EAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGf,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACvC,EAAA,CAtGQD,GAAG;AAAAmD,EAAA,GAAHnD,GAAG;AAwGZ,eAAeA,GAAG;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}