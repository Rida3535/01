{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrc\\\\Documents\\\\SEM-VII\\\\IAD\\\\Assignment\\\\01\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [projectCount, setProjectCount] = useState(0);\n  const API_URL = \"http://localhost:5000/api/projects\";\n\n  // Fetch projects and count\n  const fetchProjects = async () => {\n    try {\n      const response = await fetch(API_URL);\n      const data = await response.json();\n      setProjects(data.projects);\n      const countResponse = await fetch(`${API_URL}/count`);\n      const countData = await countResponse.json();\n      setProjectCount(countData.total);\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  // Add new project\n  const addProject = async () => {\n    try {\n      const response = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: newProject\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setProjects([...projects, data.project]);\n        setNewProject('');\n        setErrorMessage('');\n      } else {\n        setErrorMessage(data.message);\n      }\n    } catch (error) {\n      setErrorMessage(\"Failed to add project.\");\n    }\n  };\n\n  // Delete a project\n  const deleteProject = async id => {\n    try {\n      const response = await fetch(`${API_URL}/${id}`, {\n        method: \"DELETE\"\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setProjects(projects.filter(proj => proj.id !== id));\n        setProjectCount(prev => prev - 1);\n      } else {\n        setErrorMessage(data.message);\n      }\n    } catch (error) {\n      setErrorMessage(\"Failed to delete project.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Projects: \", projectCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newProject,\n      onChange: e => setNewProject(e.target.value),\n      placeholder: \"Enter project name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addProject,\n      children: \"Add Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [project.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteProject(project.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchProjects,\n      children: \"Refresh Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"EMx0XVimbVanOvoj00oXs4NmUVk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","projects","setProjects","newProject","setNewProject","errorMessage","setErrorMessage","projectCount","setProjectCount","API_URL","fetchProjects","response","fetch","data","json","countResponse","countData","total","error","console","addProject","method","headers","body","JSON","stringify","name","ok","project","message","deleteProject","id","filter","proj","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/mrc/Documents/SEM-VII/IAD/Assignment/01/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n    const [projects, setProjects] = useState([]);\n    const [newProject, setNewProject] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [projectCount, setProjectCount] = useState(0);\n    const API_URL = \"http://localhost:5000/api/projects\";\n\n    // Fetch projects and count\n    const fetchProjects = async () => {\n        try {\n            const response = await fetch(API_URL);\n            const data = await response.json();\n            setProjects(data.projects);\n\n            const countResponse = await fetch(`${API_URL}/count`);\n            const countData = await countResponse.json();\n            setProjectCount(countData.total);\n        } catch (error) {\n            console.error(\"Error fetching projects:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchProjects();\n    }, []);\n\n    // Add new project\n    const addProject = async () => {\n        try {\n            const response = await fetch(API_URL, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ name: newProject }),\n            });\n\n            const data = await response.json();\n            if (response.ok) {\n                setProjects([...projects, data.project]);\n                setNewProject('');\n                setErrorMessage('');\n            } else {\n                setErrorMessage(data.message);\n            }\n        } catch (error) {\n            setErrorMessage(\"Failed to add project.\");\n        }\n    };\n\n    // Delete a project\n    const deleteProject = async (id) => {\n        try {\n            const response = await fetch(`${API_URL}/${id}`, { method: \"DELETE\" });\n            const data = await response.json();\n            if (response.ok) {\n                setProjects(projects.filter(proj => proj.id !== id));\n                setProjectCount(prev => prev - 1);\n            } else {\n                setErrorMessage(data.message);\n            }\n        } catch (error) {\n            setErrorMessage(\"Failed to delete project.\");\n        }\n    };\n\n    return (\n        <div>\n            <h1>Project Management</h1>\n            <p>Total Projects: {projectCount}</p>\n\n            {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\n\n            <input \n                type=\"text\" \n                value={newProject} \n                onChange={(e) => setNewProject(e.target.value)}\n                placeholder=\"Enter project name\"\n            />\n            <button onClick={addProject}>Add Project</button>\n\n            <ul>\n                {projects.map(project => (\n                    <li key={project.id}>\n                        {project.name}\n                        <button onClick={() => deleteProject(project.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n\n            <button onClick={fetchProjects}>Refresh Projects</button>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}